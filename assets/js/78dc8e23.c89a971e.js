"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[88228],{75631:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return m}});var n=a(3289);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(a),m=o,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return a?n.createElement(h,i(i({ref:t},s),{},{components:a})):n.createElement(h,i({ref:t},s))}));function m(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<r;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},71685:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return d}});var n=a(3149),o=a(97596),r=(a(3289),a(75631)),i=["components"],c={id:"attach-image-to-event-proposal-payload",title:"AttachImageToEventProposalPayload",hide_table_of_contents:!1},l=void 0,p={unversionedId:"graphql/objects/attach-image-to-event-proposal-payload",id:"graphql/objects/attach-image-to-event-proposal-payload",title:"AttachImageToEventProposalPayload",description:"Autogenerated return type of AttachImageToEventProposal",source:"@site/docs/graphql/objects/attach-image-to-event-proposal-payload.mdx",sourceDirName:"graphql/objects",slug:"/graphql/objects/attach-image-to-event-proposal-payload",permalink:"/docs/graphql/objects/attach-image-to-event-proposal-payload",draft:!1,editUrl:"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/graphql/objects/attach-image-to-event-proposal-payload.mdx",tags:[],version:"current",frontMatter:{id:"attach-image-to-event-proposal-payload",title:"AttachImageToEventProposalPayload",hide_table_of_contents:!1},sidebar:"sidebar",previous:{title:"AttachImageToEventPayload",permalink:"/docs/graphql/objects/attach-image-to-event-payload"},next:{title:"AuthorizedApplication",permalink:"/docs/graphql/objects/authorized-application"}},s={},d=[{value:"Fields",id:"fields",level:3},{value:"<code>attachment</code> (<code>ActiveStorageAttachment</code>)",id:"attachment-activestorageattachment",level:4},{value:"<code>clientMutationId</code> (<code>String</code>)",id:"clientmutationid-string",level:4},{value:"<code>event_proposal</code> (<code>EventProposal</code>)",id:"event_proposal-eventproposal",level:4}],u={toc:d};function m(e){var t=e.components,a=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Autogenerated return type of AttachImageToEventProposal"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"type AttachImageToEventProposalPayload {\n  attachment: ActiveStorageAttachment!\n  clientMutationId: String\n  event_proposal: EventProposal!\n}\n")),(0,r.kt)("h3",{id:"fields"},"Fields"),(0,r.kt)("h4",{id:"attachment-activestorageattachment"},(0,r.kt)("inlineCode",{parentName:"h4"},"attachment")," (",(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql/objects/active-storage-attachment"},(0,r.kt)("inlineCode",{parentName:"a"},"ActiveStorageAttachment")),")"),(0,r.kt)("h4",{id:"clientmutationid-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"clientMutationId")," (",(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String")),")"),(0,r.kt)("p",null,"A unique identifier for the client performing the mutation."),(0,r.kt)("h4",{id:"event_proposal-eventproposal"},(0,r.kt)("inlineCode",{parentName:"h4"},"event_proposal")," (",(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql/objects/event-proposal"},(0,r.kt)("inlineCode",{parentName:"a"},"EventProposal")),")"))}m.isMDXComponent=!0}}]);