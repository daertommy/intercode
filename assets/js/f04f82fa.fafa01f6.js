"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[99008],{75631:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(45721);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(r),h=a,m=u["".concat(s,".").concat(h)]||u[h]||d[h]||o;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=h;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},23669:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var n=r(91487),a=(r(45721),r(75631));const o={id:"schema",slug:"/graphql",title:"The Intercode GraphQL Schema",sidebar_label:"Introduction",sidebar_position:1},i=void 0,c={unversionedId:"graphql/schema",id:"graphql/schema",title:"The Intercode GraphQL Schema",description:"Intercode uses GraphQL for its API. This API is used both by Intercode",source:"@site/docs/graphql/graphql-homepage.md",sourceDirName:"graphql",slug:"/graphql",permalink:"/docs/graphql",draft:!1,editUrl:"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/graphql/graphql-homepage.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"schema",slug:"/graphql",title:"The Intercode GraphQL Schema",sidebar_label:"Introduction",sidebar_position:1},sidebar:"sidebar",previous:{title:"Forms",permalink:"/docs/concepts/forms"},next:{title:"deprecated",permalink:"/docs/graphql/directives/deprecated"}},s={},l=[],p={toc:l},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Intercode uses ",(0,a.kt)("a",{parentName:"p",href:"https://graphql.org"},"GraphQL")," for its API. This API is used both by Intercode\nitself and third-party applications."),(0,a.kt)("p",null,"The documentation in this section has been automatically generated from the Intercode GraphQL schema."),(0,a.kt)("p",null,"Use the docs in the sidebar to find out how to use the schema:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Allowed operations"),": queries and mutations."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Schema-defined types"),": scalars, objects, enums, interfaces, unions, and input objects.")))}d.isMDXComponent=!0}}]);