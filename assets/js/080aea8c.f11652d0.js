"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[20451],{75631:(e,t,i)=>{i.d(t,{Zo:()=>u,kt:()=>f});var r=i(45721);function o(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function n(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function l(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?n(Object(i),!0).forEach((function(t){o(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):n(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function a(e,t){if(null==e)return{};var i,r,o=function(e,t){if(null==e)return{};var i,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)i=n[r],t.indexOf(i)>=0||(o[i]=e[i]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)i=n[r],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(o[i]=e[i])}return o}var c=r.createContext({}),d=function(e){var t=r.useContext(c),i=t;return e&&(i="function"==typeof e?e(t):l(l({},t),e)),i},u=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var i=e.components,o=e.mdxType,n=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),s=d(i),b=o,f=s["".concat(c,".").concat(b)]||s[b]||p[b]||n;return i?r.createElement(f,l(l({ref:t},u),{},{components:i})):r.createElement(f,l({ref:t},u))}));function f(e,t){var i=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=i.length,l=new Array(n);l[0]=b;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[s]="string"==typeof e?e:o,l[1]=a;for(var d=2;d<n;d++)l[d]=i[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,i)}b.displayName="MDXCreateElement"},3715:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>n,metadata:()=>a,toc:()=>d});var r=i(9715),o=(i(45721),i(75631));const n={id:"bucket-availability-drop",title:"BucketAvailabilityDrop"},l=void 0,a={unversionedId:"liquid/drops/bucket-availability-drop",id:"liquid/drops/bucket-availability-drop",title:"BucketAvailabilityDrop",description:"The available slots for a single bucket in an event run",source:"@site/docs/liquid/drops/bucket-availability-drop.mdx",sourceDirName:"liquid/drops",slug:"/liquid/drops/bucket-availability-drop",permalink:"/docs/liquid/drops/bucket-availability-drop",draft:!1,editUrl:"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/liquid/drops/bucket-availability-drop.mdx",tags:[],version:"current",frontMatter:{id:"bucket-availability-drop",title:"BucketAvailabilityDrop"},sidebar:"sidebar",previous:{title:"spoiler",permalink:"/docs/liquid/blocks/spoiler"},next:{title:"ConventionDrop",permalink:"/docs/liquid/drops/convention-drop"}},c={},d=[{value:"Fields",id:"fields",level:3},{value:"<code>available_slots</code> (<code>Integer</code>)",id:"available_slots-integer",level:4},{value:'<code>bucket</code> (<code><a href="/docs/liquid/drops/registration-policy-bucket-drop">RegistrationPolicy::BucketDrop</a></code>)',id:"bucket-registrationpolicybucketdrop",level:4},{value:"<code>confirmed_count</code> (<code>Integer</code>)",id:"confirmed_count-integer",level:4},{value:"<code>full</code> (<code>Boolean</code>)",id:"full-boolean",level:4},{value:"<code>has_availablity</code> (<code>Boolean</code>)",id:"has_availablity-boolean",level:4}],u={toc:d},s="wrapper";function p(e){let{components:t,...i}=e;return(0,o.kt)(s,(0,r.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The available slots for a single bucket in an event run"),(0,o.kt)("h3",{id:"fields"},"Fields"),(0,o.kt)("h4",{id:"available_slots-integer"},(0,o.kt)("inlineCode",{parentName:"h4"},"available_slots")," (",(0,o.kt)("code",null,"Integer"),")"),(0,o.kt)("p",null,"The number of slots available in this bucket (or nil if the bucket is\nunlimited)"),(0,o.kt)("h4",{id:"bucket-registrationpolicybucketdrop"},(0,o.kt)("inlineCode",{parentName:"h4"},"bucket")," (",(0,o.kt)("code",null,(0,o.kt)("a",{href:"/docs/liquid/drops/registration-policy-bucket-drop"},"RegistrationPolicy",":",":","BucketDrop")),")"),(0,o.kt)("p",null,"The bucket itself"),(0,o.kt)("h4",{id:"confirmed_count-integer"},(0,o.kt)("inlineCode",{parentName:"h4"},"confirmed_count")," (",(0,o.kt)("code",null,"Integer"),")"),(0,o.kt)("p",null,"The number of filled slots in this bucket (whether counted or not-counted)"),(0,o.kt)("h4",{id:"full-boolean"},(0,o.kt)("inlineCode",{parentName:"h4"},"full")," (",(0,o.kt)("code",null,"Boolean"),")"),(0,o.kt)("p",null,"Is this bucket full?  (Always false for unlimited buckets.)"),(0,o.kt)("h4",{id:"has_availablity-boolean"},(0,o.kt)("inlineCode",{parentName:"h4"},"has_availablity")," (",(0,o.kt)("code",null,"Boolean"),")"),(0,o.kt)("p",null,"Does this bucket have any available slots?\n(Always true for unlimited buckets.)"))}p.isMDXComponent=!0}}]);