"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[25438],{75631:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(3289);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var a=r.createContext({}),c=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(a.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),h=i,v=p["".concat(a,".").concat(h)]||p[h]||s[h]||o;return n?r.createElement(v,d(d({ref:t},u),{},{components:n})):r.createElement(v,d({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,d=new Array(o);d[0]=p;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l.mdxType="string"==typeof e?e:i,d[1]=l;for(var c=2;c<o;c++)d[c]=n[c];return r.createElement.apply(null,d)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},81633:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(50744),i=(n(3289),n(75631));const o={id:"run-drop",title:"RunDrop"},d=void 0,l={unversionedId:"liquid/drops/run-drop",id:"liquid/drops/run-drop",title:"RunDrop",description:"A run of an event",source:"@site/docs/liquid/drops/run-drop.mdx",sourceDirName:"liquid/drops",slug:"/liquid/drops/run-drop",permalink:"/docs/liquid/drops/run-drop",draft:!1,editUrl:"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/liquid/drops/run-drop.mdx",tags:[],version:"current",frontMatter:{id:"run-drop",title:"RunDrop"},sidebar:"sidebar",previous:{title:"RunAvailabilityDrop",permalink:"/docs/liquid/drops/run-availability-drop"},next:{title:"ScheduledValueDrop",permalink:"/docs/liquid/drops/scheduled-value-drop"}},a={},c=[{value:"Fields",id:"fields",level:3},{value:"<code>created_at</code> (<code>ActiveSupport::TimeWithZone</code>)",id:"created_at-activesupporttimewithzone",level:4},{value:"<code>ends_at</code> (<code>ActiveSupport::TimeWithZone</code>)",id:"ends_at-activesupporttimewithzone",level:4},{value:'<code>event</code> (<code><a href="/docs/liquid/drops/event-drop">EventDrop</a></code>)',id:"event-eventdrop",level:4},{value:"<code>event_url</code> (<code>String</code>)",id:"event_url-string",level:4},{value:"<code>id</code> (<code>Integer</code>)",id:"id-integer",level:4},{value:"<code>length_seconds</code> (<code>Integer</code>)",id:"length_seconds-integer",level:4},{value:"<code>room_names</code> (<code>Array&lt;String&gt;</code>)",id:"room_names-arraystring",level:4},{value:"<code>signup_count_description</code> (<code>String</code>)",id:"signup_count_description-string",level:4},{value:"<code>starts_at</code> (<code>ActiveSupport::TimeWithZone</code>)",id:"starts_at-activesupporttimewithzone",level:4}],u={toc:c};function s(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A run of an event"),(0,i.kt)("h3",{id:"fields"},"Fields"),(0,i.kt)("h4",{id:"created_at-activesupporttimewithzone"},(0,i.kt)("inlineCode",{parentName:"h4"},"created_at")," (",(0,i.kt)("code",null,"ActiveSupport::TimeWithZone"),")"),(0,i.kt)("p",null,"The time at which this run was first created in the\ndatabase (by being scheduled by con staff)"),(0,i.kt)("h4",{id:"ends_at-activesupporttimewithzone"},(0,i.kt)("inlineCode",{parentName:"h4"},"ends_at")," (",(0,i.kt)("code",null,"ActiveSupport::TimeWithZone"),")"),(0,i.kt)("p",null,"The time at which this run ends"),(0,i.kt)("h4",{id:"event-eventdrop"},(0,i.kt)("inlineCode",{parentName:"h4"},"event")," (",(0,i.kt)("code",null,(0,i.kt)("a",{href:"/docs/liquid/drops/event-drop"},"EventDrop")),")"),(0,i.kt)("p",null,"The event this is a run of"),(0,i.kt)("h4",{id:"event_url-string"},(0,i.kt)("inlineCode",{parentName:"h4"},"event_url")," (",(0,i.kt)("code",null,"String"),")"),(0,i.kt)("p",null,"The relative URL to use for linking to the event's page on the convention site"),(0,i.kt)("h4",{id:"id-integer"},(0,i.kt)("inlineCode",{parentName:"h4"},"id")," (",(0,i.kt)("code",null,"Integer"),")"),(0,i.kt)("p",null,"The numeric database ID of this run"),(0,i.kt)("h4",{id:"length_seconds-integer"},(0,i.kt)("inlineCode",{parentName:"h4"},"length_seconds")," (",(0,i.kt)("code",null,"Integer"),")"),(0,i.kt)("p",null,"The length of this run in seconds"),(0,i.kt)("h4",{id:"room_names-arraystring"},(0,i.kt)("inlineCode",{parentName:"h4"},"room_names")," (",(0,i.kt)("code",null,"Array","<","String",">"),")"),(0,i.kt)("p",null,"The names of all rooms this run is scheduled in"),(0,i.kt)("h4",{id:"signup_count_description-string"},(0,i.kt)("inlineCode",{parentName:"h4"},"signup_count_description")," (",(0,i.kt)("code",null,"String"),")"),(0,i.kt)("p",null,"A text description of the number of signups for this run, split out by\nstate and bucket"),(0,i.kt)("h4",{id:"starts_at-activesupporttimewithzone"},(0,i.kt)("inlineCode",{parentName:"h4"},"starts_at")," (",(0,i.kt)("code",null,"ActiveSupport::TimeWithZone"),")"),(0,i.kt)("p",null,"The time at which this run starts"))}s.isMDXComponent=!0}}]);