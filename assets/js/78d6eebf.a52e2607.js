"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[161],{75631:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(3289);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=r.createContext({}),s=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,o=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),d=s(n),f=i,g=d["".concat(o,".").concat(f)]||d[f]||p[f]||l;return n?r.createElement(g,a(a({ref:t},c),{},{components:n})):r.createElement(g,a({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,a=new Array(l);a[0]=d;var u={};for(var o in t)hasOwnProperty.call(t,o)&&(u[o]=t[o]);u.originalType=e,u.mdxType="string"==typeof e?e:i,a[1]=u;for(var s=2;s<l;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},42541:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return o},default:function(){return f},frontMatter:function(){return u},metadata:function(){return s},toc:function(){return p}});var r=n(43830),i=n(32056),l=(n(3289),n(75631)),a=["components"],u={id:"pluralize",title:"pluralize"},o=void 0,s={unversionedId:"liquid/filters/pluralize",id:"liquid/filters/pluralize",title:"pluralize",description:"Can be used to either pluralize a singular noun, or to conditionally pluralize a noun based",source:"@site/docs/liquid/filters/pluralize.mdx",sourceDirName:"liquid/filters",slug:"/liquid/filters/pluralize",permalink:"/docs/liquid/filters/pluralize",editUrl:"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/liquid/filters/pluralize.mdx",tags:[],version:"current",frontMatter:{id:"pluralize",title:"pluralize"},sidebar:"sidebar",previous:{title:"md5",permalink:"/docs/liquid/filters/md-5"},next:{title:"singularize",permalink:"/docs/liquid/filters/singularize"}},c={},p=[{value:"Parameters",id:"parameters",level:3},{value:"<code>input</code> (<code>String</code>, <code>Integer</code>)",id:"input-string-integer",level:4},{value:"<code>plural</code> (<code>String</code>)",id:"plural-string",level:4},{value:"<code>singular</code> (<code>String</code>)",id:"singular-string",level:4},{value:"Returns (<code>String</code>)",id:"returns-string",level:3},{value:"Examples",id:"examples",level:3}],d={toc:p};function f(e){var t=e.components,n=(0,i.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Can be used to either pluralize a singular noun, or to conditionally pluralize a noun based\non a count."),(0,l.kt)("h3",{id:"parameters"},"Parameters"),(0,l.kt)("h4",{id:"input-string-integer"},(0,l.kt)("inlineCode",{parentName:"h4"},"input")," (",(0,l.kt)("code",null,"String"),", ",(0,l.kt)("code",null,"Integer"),")"),(0,l.kt)("p",null,"The input to pluralize.  If it's a string, that string will\nbe unconditionally pluralized.  If it's a number, pluralize\nwill read the singular and plural parameters and decide\nbetween them depending on whether input is 1."),(0,l.kt)("h4",{id:"plural-string"},(0,l.kt)("inlineCode",{parentName:"h4"},"plural")," (",(0,l.kt)("code",null,"String"),")"),(0,l.kt)("p",null,"Optional.  If input is a number, this will be the result if input is\nnot 1."),(0,l.kt)("h4",{id:"singular-string"},(0,l.kt)("inlineCode",{parentName:"h4"},"singular")," (",(0,l.kt)("code",null,"String"),")"),(0,l.kt)("p",null,"Optional.  If input is a number, this will be the result if input\nis 1."),(0,l.kt)("h3",{id:"returns-string"},"Returns (",(0,l.kt)("code",null,"String"),")"),(0,l.kt)("p",null,"The pluralized string or phrase"),(0,l.kt)("h3",{id:"examples"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-liquid",metastring:'title="Pluralizing a noun unconditionally"',title:'"Pluralizing',a:!0,noun:!0,'unconditionally"':!0},'{{ "goose" | pluralize }} => "geese"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-liquid",metastring:'title="Pluralizing a count"',title:'"Pluralizing',a:!0,'count"':!0},'You are signed up for {{ user_con_profile.signups.length | pluralize "game" "games" }}\n=> "You are signed up for 3 games"\n')))}f.isMDXComponent=!0}}]);